version: "3.8"

services:
  postgresuser:
    image: postgres:latest
    container_name: postgres_user
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: ecommerce
    ports:
      - "5435:5432"
    volumes:
      - postgres_data_user:/var/lib/postgresql/data

  postgresproduct:
    image: postgres:latest
    container_name: postgres_product
    environment:
      POSTGRES_USER: product
      POSTGRES_PASSWORD: ecommerce
    ports:
      - "5440:5432"
    volumes:
      - postgres_data_product:/var/lib/postgresql/data

  postgresorder:
    image: postgres:latest
    container_name: postgres_order
    environment:
      POSTGRES_USER: order
      POSTGRES_PASSWORD: ecommerce
    ports:
      - "5445:5432"
    volumes:
      - postgres_data_order:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8081:80"
    depends_on:
      - postgresuser
      - postgresproduct
      - postgresorder
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_JUTE_MAXBUFFER: 2097152  # Augmenter la taille du buffer Ã  2MB
    ports:
      - "22181:22181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:22181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: 20000000  # 20MB
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 20000000  # Ensure this matches or exceeds the message.max.bytes
    ports:
      - "9093:29092"
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKER_CONNECT: kafka:29092
    depends_on:
      - kafka

  kafka-manager:
    image: hlebalbau/kafka-manager:stable
    container_name: kafka-manager
    ports:
      - "9001:9000"
    environment:
      ZK_HOSTS: zookeeper:22181
    depends_on:
      - zookeeper

volumes:
  postgres_data_user:
  postgres_data_order:
  postgres_data_product:
  pgadmin_data:
